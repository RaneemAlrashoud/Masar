{
  "kind": "Root",
  "name": "TopLevel",
  "printedName": "TopLevel",
  "children": [
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "RawDocComment"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "RawDocComment"
      ]
    },
    {
      "kind": "Function",
      "name": "openSSLSafeCompare",
      "printedName": "openSSLSafeCompare(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "usr": "s:Sb"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_1"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Crypto18openSSLSafeCompareySbx_q_t10Foundation15ContiguousBytesRzAcDR_r0_lF",
      "mangledName": "$s6Crypto18openSSLSafeCompareySbx_q_t10Foundation15ContiguousBytesRzAcDR_r0_lF",
      "moduleName": "Crypto",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Foundation.ContiguousBytes, τ_0_1 : Foundation.ContiguousBytes>",
      "sugared_genericSig": "<LHS, RHS where LHS : Foundation.ContiguousBytes, RHS : Foundation.ContiguousBytes>",
      "declAttributes": [
        "AccessControl",
        "Inlinable",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Function",
      "name": "constantTimeCompare",
      "printedName": "constantTimeCompare(_:_:)",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "Bool",
          "printedName": "Swift.Bool",
          "usr": "s:Sb"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_0"
        },
        {
          "kind": "TypeNominal",
          "name": "GenericTypeParam",
          "printedName": "τ_0_1"
        }
      ],
      "declKind": "Func",
      "usr": "s:6Crypto19constantTimeCompareySbx_q_tSlRzSlR_s5UInt8V7ElementRtzAdERt_r0_lF",
      "mangledName": "$s6Crypto19constantTimeCompareySbx_q_tSlRzSlR_s5UInt8V7ElementRtzAdERt_r0_lF",
      "moduleName": "Crypto",
      "genericSig": "<τ_0_0, τ_0_1 where τ_0_0 : Swift.Collection, τ_0_1 : Swift.Collection, τ_0_0.Element == Swift.UInt8, τ_0_1.Element == Swift.UInt8>",
      "sugared_genericSig": "<LHS, RHS where LHS : Swift.Collection, RHS : Swift.Collection, LHS.Element == Swift.UInt8, RHS.Element == Swift.UInt8>",
      "declAttributes": [
        "AccessControl",
        "Inlinable",
        "RawDocComment"
      ],
      "funcSelfKind": "NonMutating"
    },
    {
      "kind": "Import",
      "name": "Foundation",
      "printedName": "Foundation",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "RawDocComment"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "ByteHexEncodingErrors",
      "printedName": "ByteHexEncodingErrors",
      "children": [
        {
          "kind": "Var",
          "name": "incorrectHexValue",
          "printedName": "incorrectHexValue",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Crypto.ByteHexEncodingErrors.Type) -> Crypto.ByteHexEncodingErrors",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ByteHexEncodingErrors",
                  "printedName": "Crypto.ByteHexEncodingErrors",
                  "usr": "s:6Crypto21ByteHexEncodingErrorsO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Crypto.ByteHexEncodingErrors.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ByteHexEncodingErrors",
                      "printedName": "Crypto.ByteHexEncodingErrors",
                      "usr": "s:6Crypto21ByteHexEncodingErrorsO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Crypto21ByteHexEncodingErrorsO09incorrectC5ValueyA2CmF",
          "mangledName": "$s6Crypto21ByteHexEncodingErrorsO09incorrectC5ValueyA2CmF",
          "moduleName": "Crypto",
          "fixedbinaryorder": 0
        },
        {
          "kind": "Var",
          "name": "incorrectString",
          "printedName": "incorrectString",
          "children": [
            {
              "kind": "TypeFunc",
              "name": "Function",
              "printedName": "(Crypto.ByteHexEncodingErrors.Type) -> Crypto.ByteHexEncodingErrors",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "ByteHexEncodingErrors",
                  "printedName": "Crypto.ByteHexEncodingErrors",
                  "usr": "s:6Crypto21ByteHexEncodingErrorsO"
                },
                {
                  "kind": "TypeNominal",
                  "name": "Metatype",
                  "printedName": "Crypto.ByteHexEncodingErrors.Type",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "ByteHexEncodingErrors",
                      "printedName": "Crypto.ByteHexEncodingErrors",
                      "usr": "s:6Crypto21ByteHexEncodingErrorsO"
                    }
                  ]
                }
              ]
            }
          ],
          "declKind": "EnumElement",
          "usr": "s:6Crypto21ByteHexEncodingErrorsO15incorrectStringyA2CmF",
          "mangledName": "$s6Crypto21ByteHexEncodingErrorsO15incorrectStringyA2CmF",
          "moduleName": "Crypto",
          "fixedbinaryorder": 1
        },
        {
          "kind": "Function",
          "name": "__derived_enum_equals",
          "printedName": "__derived_enum_equals(_:_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Bool",
              "printedName": "Swift.Bool",
              "usr": "s:Sb"
            },
            {
              "kind": "TypeNominal",
              "name": "ByteHexEncodingErrors",
              "printedName": "Crypto.ByteHexEncodingErrors",
              "usr": "s:6Crypto21ByteHexEncodingErrorsO"
            },
            {
              "kind": "TypeNominal",
              "name": "ByteHexEncodingErrors",
              "printedName": "Crypto.ByteHexEncodingErrors",
              "usr": "s:6Crypto21ByteHexEncodingErrorsO"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Crypto21ByteHexEncodingErrorsO21__derived_enum_equalsySbAC_ACtFZ",
          "mangledName": "$s6Crypto21ByteHexEncodingErrorsO21__derived_enum_equalsySbAC_ACtFZ",
          "moduleName": "Crypto",
          "static": true,
          "implicit": true,
          "declAttributes": [
            "Implements"
          ],
          "funcSelfKind": "NonMutating"
        },
        {
          "kind": "Var",
          "name": "hashValue",
          "printedName": "hashValue",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Int",
              "printedName": "Swift.Int",
              "usr": "s:Si"
            }
          ],
          "declKind": "Var",
          "usr": "s:6Crypto21ByteHexEncodingErrorsO9hashValueSivp",
          "mangledName": "$s6Crypto21ByteHexEncodingErrorsO9hashValueSivp",
          "moduleName": "Crypto",
          "implicit": true,
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:6Crypto21ByteHexEncodingErrorsO9hashValueSivg",
              "mangledName": "$s6Crypto21ByteHexEncodingErrorsO9hashValueSivg",
              "moduleName": "Crypto",
              "implicit": true,
              "accessorKind": "get"
            }
          ]
        },
        {
          "kind": "Function",
          "name": "hash",
          "printedName": "hash(into:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "Hasher",
              "printedName": "Swift.Hasher",
              "paramValueOwnership": "InOut",
              "usr": "s:s6HasherV"
            }
          ],
          "declKind": "Func",
          "usr": "s:6Crypto21ByteHexEncodingErrorsO4hash4intoys6HasherVz_tF",
          "mangledName": "$s6Crypto21ByteHexEncodingErrorsO4hash4intoys6HasherVz_tF",
          "moduleName": "Crypto",
          "implicit": true,
          "funcSelfKind": "NonMutating"
        }
      ],
      "declKind": "Enum",
      "usr": "s:6Crypto21ByteHexEncodingErrorsO",
      "mangledName": "$s6Crypto21ByteHexEncodingErrorsO",
      "moduleName": "Crypto",
      "isEnumExhaustive": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "Error",
          "printedName": "Error",
          "usr": "s:s5ErrorP",
          "mangledName": "$ss5ErrorP"
        },
        {
          "kind": "Conformance",
          "name": "Sendable",
          "printedName": "Sendable",
          "usr": "s:s8SendableP",
          "mangledName": "$ss8SendableP"
        }
      ]
    },
    {
      "kind": "Var",
      "name": "charA",
      "printedName": "charA",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "UInt8",
          "printedName": "Swift.UInt8",
          "usr": "s:s5UInt8V"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Crypto5charAs5UInt8Vvp",
      "mangledName": "$s6Crypto5charAs5UInt8Vvp",
      "moduleName": "Crypto",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "Var",
      "name": "char0",
      "printedName": "char0",
      "children": [
        {
          "kind": "TypeNominal",
          "name": "UInt8",
          "printedName": "Swift.UInt8",
          "usr": "s:s5UInt8V"
        }
      ],
      "declKind": "Var",
      "usr": "s:6Crypto5char0s5UInt8Vvp",
      "mangledName": "$s6Crypto5char0s5UInt8Vvp",
      "moduleName": "Crypto",
      "declAttributes": [
        "HasInitialValue",
        "HasStorage"
      ],
      "isLet": true,
      "hasStorage": true
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "Import",
      "name": "CryptoKit",
      "printedName": "CryptoKit",
      "declKind": "Import",
      "moduleName": "Crypto",
      "declAttributes": [
        "Exported"
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "DataProtocol",
      "printedName": "DataProtocol",
      "children": [
        {
          "kind": "Var",
          "name": "hexString",
          "printedName": "hexString",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Var",
          "usr": "s:10Foundation12DataProtocolP6CryptoE9hexStringSSvp",
          "mangledName": "$s10Foundation12DataProtocolP6CryptoE9hexStringSSvp",
          "moduleName": "Crypto",
          "accessors": [
            {
              "kind": "Accessor",
              "name": "Get",
              "printedName": "Get()",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "String",
                  "printedName": "Swift.String",
                  "usr": "s:SS"
                }
              ],
              "declKind": "Accessor",
              "usr": "s:10Foundation12DataProtocolP6CryptoE9hexStringSSvg",
              "mangledName": "$s10Foundation12DataProtocolP6CryptoE9hexStringSSvg",
              "moduleName": "Crypto",
              "genericSig": "<τ_0_0 where τ_0_0 : Foundation.DataProtocol>",
              "sugared_genericSig": "<Self where Self : Foundation.DataProtocol>",
              "accessorKind": "get"
            }
          ]
        }
      ],
      "declKind": "Protocol",
      "usr": "s:10Foundation12DataProtocolP",
      "mangledName": "$s10Foundation12DataProtocolP",
      "moduleName": "Foundation",
      "genericSig": "<τ_0_0 : Swift.RandomAccessCollection, τ_0_0.Element == Swift.UInt8, τ_0_0.Regions : Swift.BidirectionalCollection, τ_0_0.SubSequence : Foundation.DataProtocol, τ_0_0.Regions.Element : Foundation.ContiguousBytes, τ_0_0.Regions.Element : Foundation.DataProtocol, τ_0_0.Regions.Element.SubSequence : Foundation.ContiguousBytes>",
      "sugared_genericSig": "<Self : Swift.RandomAccessCollection, Self.Element == Swift.UInt8, Self.Regions : Swift.BidirectionalCollection, Self.SubSequence : Foundation.DataProtocol, Self.Regions.Element : Foundation.ContiguousBytes, Self.Regions.Element : Foundation.DataProtocol, Self.Regions.Element.SubSequence : Foundation.ContiguousBytes>",
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "RandomAccessCollection",
          "printedName": "RandomAccessCollection",
          "usr": "s:Sk",
          "mangledName": "$sSk"
        },
        {
          "kind": "Conformance",
          "name": "BidirectionalCollection",
          "printedName": "BidirectionalCollection",
          "usr": "s:SK",
          "mangledName": "$sSK"
        },
        {
          "kind": "Conformance",
          "name": "Collection",
          "printedName": "Collection",
          "usr": "s:Sl",
          "mangledName": "$sSl"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "usr": "s:ST",
          "mangledName": "$sST"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "MutableDataProtocol",
      "printedName": "MutableDataProtocol",
      "children": [
        {
          "kind": "Function",
          "name": "appendByte",
          "printedName": "appendByte(_:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Void",
              "printedName": "()"
            },
            {
              "kind": "TypeNominal",
              "name": "UInt64",
              "printedName": "Swift.UInt64",
              "usr": "s:s6UInt64V"
            }
          ],
          "declKind": "Func",
          "usr": "s:10Foundation19MutableDataProtocolP6CryptoE10appendByteyys6UInt64VF",
          "mangledName": "$s10Foundation19MutableDataProtocolP6CryptoE10appendByteyys6UInt64VF",
          "moduleName": "Crypto",
          "genericSig": "<τ_0_0 where τ_0_0 : Foundation.MutableDataProtocol>",
          "sugared_genericSig": "<Self where Self : Foundation.MutableDataProtocol>",
          "declAttributes": [
            "Mutating"
          ],
          "funcSelfKind": "Mutating"
        }
      ],
      "declKind": "Protocol",
      "usr": "s:10Foundation19MutableDataProtocolP",
      "mangledName": "$s10Foundation19MutableDataProtocolP",
      "moduleName": "Foundation",
      "genericSig": "<τ_0_0 : Foundation.DataProtocol, τ_0_0 : Swift.MutableCollection, τ_0_0 : Swift.RangeReplaceableCollection>",
      "sugared_genericSig": "<Self : Foundation.DataProtocol, Self : Swift.MutableCollection, Self : Swift.RangeReplaceableCollection>",
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "DataProtocol",
          "printedName": "DataProtocol",
          "usr": "s:10Foundation12DataProtocolP",
          "mangledName": "$s10Foundation12DataProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "MutableCollection",
          "printedName": "MutableCollection",
          "usr": "s:SM",
          "mangledName": "$sSM"
        },
        {
          "kind": "Conformance",
          "name": "RangeReplaceableCollection",
          "printedName": "RangeReplaceableCollection",
          "usr": "s:Sm",
          "mangledName": "$sSm"
        },
        {
          "kind": "Conformance",
          "name": "RandomAccessCollection",
          "printedName": "RandomAccessCollection",
          "usr": "s:Sk",
          "mangledName": "$sSk"
        },
        {
          "kind": "Conformance",
          "name": "Collection",
          "printedName": "Collection",
          "usr": "s:Sl",
          "mangledName": "$sSl"
        },
        {
          "kind": "Conformance",
          "name": "BidirectionalCollection",
          "printedName": "BidirectionalCollection",
          "usr": "s:SK",
          "mangledName": "$sSK"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "usr": "s:ST",
          "mangledName": "$sST"
        }
      ]
    },
    {
      "kind": "TypeDecl",
      "name": "Data",
      "printedName": "Data",
      "children": [
        {
          "kind": "Constructor",
          "name": "init",
          "printedName": "init(hexString:)",
          "children": [
            {
              "kind": "TypeNominal",
              "name": "Data",
              "printedName": "Foundation.Data",
              "usr": "s:10Foundation4DataV"
            },
            {
              "kind": "TypeNominal",
              "name": "String",
              "printedName": "Swift.String",
              "usr": "s:SS"
            }
          ],
          "declKind": "Constructor",
          "usr": "s:10Foundation4DataV6CryptoE9hexStringACSS_tKcfc",
          "mangledName": "$s10Foundation4DataV6CryptoE9hexStringACSS_tKcfc",
          "moduleName": "Crypto",
          "throwing": true,
          "init_kind": "Designated"
        }
      ],
      "declKind": "Struct",
      "usr": "s:10Foundation4DataV",
      "mangledName": "$s10Foundation4DataV",
      "moduleName": "Foundation",
      "declAttributes": [
        "Frozen"
      ],
      "isExternal": true,
      "conformances": [
        {
          "kind": "Conformance",
          "name": "ReferenceConvertible",
          "printedName": "ReferenceConvertible",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "ReferenceType",
              "printedName": "ReferenceType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSData",
                  "printedName": "Foundation.NSData",
                  "usr": "c:objc(cs)NSData"
                }
              ]
            }
          ],
          "usr": "s:10Foundation20ReferenceConvertibleP",
          "mangledName": "$s10Foundation20ReferenceConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "Equatable",
          "printedName": "Equatable",
          "usr": "s:SQ",
          "mangledName": "$sSQ"
        },
        {
          "kind": "Conformance",
          "name": "Hashable",
          "printedName": "Hashable",
          "usr": "s:SH",
          "mangledName": "$sSH"
        },
        {
          "kind": "Conformance",
          "name": "RandomAccessCollection",
          "printedName": "RandomAccessCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:Sk",
          "mangledName": "$sSk"
        },
        {
          "kind": "Conformance",
          "name": "MutableCollection",
          "printedName": "MutableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            }
          ],
          "usr": "s:SM",
          "mangledName": "$sSM"
        },
        {
          "kind": "Conformance",
          "name": "RangeReplaceableCollection",
          "printedName": "RangeReplaceableCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            }
          ],
          "usr": "s:Sm",
          "mangledName": "$sSm"
        },
        {
          "kind": "Conformance",
          "name": "MutableDataProtocol",
          "printedName": "MutableDataProtocol",
          "usr": "s:10Foundation19MutableDataProtocolP",
          "mangledName": "$s10Foundation19MutableDataProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "ContiguousBytes",
          "printedName": "ContiguousBytes",
          "usr": "s:10Foundation15ContiguousBytesP",
          "mangledName": "$s10Foundation15ContiguousBytesP"
        },
        {
          "kind": "Conformance",
          "name": "BidirectionalCollection",
          "printedName": "BidirectionalCollection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:SK",
          "mangledName": "$sSK"
        },
        {
          "kind": "Conformance",
          "name": "Collection",
          "printedName": "Collection",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Index",
              "printedName": "Index",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Int",
                  "printedName": "Swift.Int",
                  "usr": "s:Si"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Foundation.Data.Iterator",
                  "usr": "s:10Foundation4DataV8IteratorV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "SubSequence",
              "printedName": "SubSequence",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Data",
                  "printedName": "Foundation.Data",
                  "usr": "s:10Foundation4DataV"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Indices",
              "printedName": "Indices",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Range",
                  "printedName": "Swift.Range<Swift.Int>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Int",
                      "printedName": "Swift.Int",
                      "usr": "s:Si"
                    }
                  ],
                  "usr": "s:Sn"
                }
              ]
            }
          ],
          "usr": "s:Sl",
          "mangledName": "$sSl"
        },
        {
          "kind": "Conformance",
          "name": "DataProtocol",
          "printedName": "DataProtocol",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Regions",
              "printedName": "Regions",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "CollectionOfOne",
                  "printedName": "Swift.CollectionOfOne<Foundation.Data>",
                  "children": [
                    {
                      "kind": "TypeNominal",
                      "name": "Data",
                      "printedName": "Foundation.Data",
                      "usr": "s:10Foundation4DataV"
                    }
                  ],
                  "usr": "s:s15CollectionOfOneV"
                }
              ]
            }
          ],
          "usr": "s:10Foundation12DataProtocolP",
          "mangledName": "$s10Foundation12DataProtocolP"
        },
        {
          "kind": "Conformance",
          "name": "Sequence",
          "printedName": "Sequence",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "Element",
              "printedName": "Element",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "UInt8",
                  "printedName": "Swift.UInt8",
                  "usr": "s:s5UInt8V"
                }
              ]
            },
            {
              "kind": "TypeWitness",
              "name": "Iterator",
              "printedName": "Iterator",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "Iterator",
                  "printedName": "Foundation.Data.Iterator",
                  "usr": "s:10Foundation4DataV8IteratorV"
                }
              ]
            }
          ],
          "usr": "s:ST",
          "mangledName": "$sST"
        },
        {
          "kind": "Conformance",
          "name": "CustomStringConvertible",
          "printedName": "CustomStringConvertible",
          "usr": "s:s23CustomStringConvertibleP",
          "mangledName": "$ss23CustomStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomDebugStringConvertible",
          "printedName": "CustomDebugStringConvertible",
          "usr": "s:s28CustomDebugStringConvertibleP",
          "mangledName": "$ss28CustomDebugStringConvertibleP"
        },
        {
          "kind": "Conformance",
          "name": "CustomReflectable",
          "printedName": "CustomReflectable",
          "usr": "s:s17CustomReflectableP",
          "mangledName": "$ss17CustomReflectableP"
        },
        {
          "kind": "Conformance",
          "name": "_ObjectiveCBridgeable",
          "printedName": "_ObjectiveCBridgeable",
          "children": [
            {
              "kind": "TypeWitness",
              "name": "_ObjectiveCType",
              "printedName": "_ObjectiveCType",
              "children": [
                {
                  "kind": "TypeNominal",
                  "name": "NSData",
                  "printedName": "Foundation.NSData",
                  "usr": "c:objc(cs)NSData"
                }
              ]
            }
          ],
          "usr": "s:s21_ObjectiveCBridgeableP",
          "mangledName": "$ss21_ObjectiveCBridgeableP"
        },
        {
          "kind": "Conformance",
          "name": "Decodable",
          "printedName": "Decodable",
          "usr": "s:Se",
          "mangledName": "$sSe"
        },
        {
          "kind": "Conformance",
          "name": "Encodable",
          "printedName": "Encodable",
          "usr": "s:SE",
          "mangledName": "$sSE"
        }
      ]
    }
  ],
  "json_format_version": 6
}